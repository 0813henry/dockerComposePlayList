---
- name: Install Docker, Git, clone PlaylistsNow repo and run docker compose
  hosts: controller
  become: yes
  vars:
    project_repo: "https://github.com/0813henry/playlistsnow.git"
    project_path: "/home/sysadmin/playlistsnow"
    project_branch: "main"
    # MongoDB Atlas connection
    mongodb_uri: "mongodb+srv://playlistsnow:playlistsnow@playlistsnow.meiecfs.mongodb.net/playlistsnow?retryWrites=true&w=majority"

  tasks:
    - name: Ensure apt cache is updated
      ansible.builtin.apt:
        update_cache: yes
      when: ansible_os_family == "Debian"

    # ---------------- Git ----------------
    - name: Ensure required packages are installed (curl, git)
      ansible.builtin.package:
        name:
          - curl
          - git
        state: present

    # ---------------- Docker CE desde repo oficial ----------------
    - name: Add Docker's official GPG key and repository
      ansible.builtin.shell: |
        install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
        chmod a+r /etc/apt/keyrings/docker.asc
        echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
          $(. /etc/os-release && echo \"$VERSION_CODENAME\") stable" | \
          tee /etc/apt/sources.list.d/docker.list > /dev/null
        apt update
      args:
        creates: /etc/apt/keyrings/docker.asc
      when: ansible_os_family == "Debian"

    - name: Install Docker CE
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
      when: ansible_os_family == "Debian"

    # ---------------- Usuario sysadmin ----------------
    - name: Ensure sysadmin user exists
      ansible.builtin.user:
        name: sysadmin
        state: present
        shell: /bin/bash
        create_home: yes

    - name: Add sysadmin to docker group
      ansible.builtin.user:
        name: sysadmin
        groups: docker
        append: yes

    - name: Start and enable Docker service
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: yes

    - name: Reset ssh connection to refresh group membership
      ansible.builtin.meta: reset_connection

    # ---------------- Proyecto ----------------
    - name: Ensure project directory exists
      ansible.builtin.file:
        path: "{{ project_path }}"
        state: directory
        owner: sysadmin
        group: sysadmin
        mode: "0755"

    - name: Clone or update the PlaylistsNow repository
      ansible.builtin.git:
        repo: "{{ project_repo }}"
        dest: "{{ project_path }}"
        version: "{{ project_branch }}"
        update: yes
        force: yes
      become_user: sysadmin

    - name: Create backend .env file
      ansible.builtin.copy:
        content: |
          PORT=8080
          MONGODB_URI={{ mongodb_uri }}
        dest: "{{ project_path }}/backend/.env"
        owner: sysadmin
        group: sysadmin
        mode: "0644"

    - name: Create frontend .env file
      ansible.builtin.copy:
        content: |
          REACT_APP_API_URL=http://localhost:8080/api
        dest: "{{ project_path }}/frontend/.env"
        owner: sysadmin
        group: sysadmin
        mode: "0644"

    - name: Ensure docker compose version 2 is available
      ansible.builtin.shell: docker compose version
      become_user: sysadmin
      register: docker_compose_version
      failed_when: false

    - name: Build and run PlaylistsNow with docker compose
      community.docker.docker_compose_v2:
        project_src: "{{ project_path }}"
        state: present
        recreate: always
      become_user: sysadmin
      vars:
        ansible_ssh_pipelining: no

    - name: Wait for backend health check
      ansible.builtin.uri:
        url: "http://localhost:8080/api/health"
        method: GET
        status_code: 200
      retries: 10
      delay: 5
      become_user: sysadmin

    - name: Display deployment status
      ansible.builtin.debug:
        msg:
          - "âœ… PlaylistsNow deployed successfully!"
          - "ðŸŽµ Frontend: http://localhost:3000"
          - "ðŸ”§ Backend API: http://localhost:8080/api"
          - "ðŸ“Š Health check: http://localhost:8080/api/health"
          - "ðŸŽ¶ Songs endpoint: http://localhost:8080/api/songs"
